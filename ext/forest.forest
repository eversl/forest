(import "core.patterns.forest")
(import "core.rules.forest")

;;;;;;;;;;;;;;;;;;;;;;;;

; start parsing here
(rule start (+ whitespace declarations endoffile))

(rule endoffile (! anychar))

(rule declaration (> sexpr))
(rule declarations (/ (+ declaration declarations) ()))

;;;;;;;;;;;;;;;;;;;;; names

(rule name (// (@ "Var" (+ (tok "'") nameliteral)) 
               (@ "VarList" (+ (tok "'''") nameliteral))
               (@ "name" nameliteral)))
(rule namechar (/ letterchar digitchar "$" "<" "=" ">" "^" "`" "|" "~" "_" "!" "%" "&" "*" "-" "+" "?" ":" "/" "@" "."))
(rule namechars (/ (+ namechar namechars) ()))
(rule nameliteral (tok (< (+ namechar namechars))))

;;;;;;;;;;;;;;;;;;;;; String and null

(rule stringchars (/ (+ (! doublequotechar) anychar stringchars) ()))
(rule stringliteral (tok (+ doublequotechar (< stringchars) doublequotechar))) 

(rule null (+ (tok "(") (tok ")")))

;;;;;;;;;;;;;; whitespace

(rule whitespace (/ (+ (/ whitespacechar linecomment) whitespace) ()))
(rule commentchars (/ (+ (! newline) anychar commentchars) ()))
(rule linecomment (+ ";" commentchars newline))
(rule newline (/ (+ returnchar linefeedchar) returnchar linefeedchar))

;;;;;;;;;;;;;;;;;;;;;;;; sexpr

(rule sexpr (// 
             name
             (@ "String" stringliteral)
             (@ "unexpanded" (parens (+ (sym "unexpanded") sexpr)))
             (@ "syntaxpattern" (parens (+ (sym "pattern") (@ "unexpanded" sexpr) (@ "unexpanded" sexpr))))
             (@ "rule" (parens (+ (sym "rule") name sexpr)))
             (@ "insert" (parens (+ (sym "insert") name sexpr)))
             (@ "newname" (parens (+ (sym "newname"))))
             (@ "import" (parens (+ (sym "import") stringliteral)))
             (@ "term" (parens (+ (sym "term") name sexprs)))
             
             (@ "+" (parens (+ (sym "+") sexprs)))
             (@ "//" (parens (+ (sym "//") sexprs)))
             (@ "/" (parens (+ (sym "/") sexprs)))
             (@ "!" (parens (+ (sym "!") sexpr)))
             (@ "<" (parens (+ (sym "<") sexpr)))
             (@ "@" (parens (+ (sym "@") sexpr sexprs)))
             (@ ">" (parens (+ (sym ">") sexpr)))
             (@ "$" (parens (+ (sym "$") sexpr sexprs)))
             (@ "^>" (parens (+ (sym "^>") sexpr)))
             (@ "^=" (parens (+ (sym "^=") sexpr)))
             (@ "^<" (parens (+ (sym "^<"))))
             (@ "null" null)
             ))

(rule sexprs (/ (+ sexpr sexprs) ()))