(make-lang (list "grammars/standard.patterns.forest" "grammars/core.rules.forest" "grammars/core.patterns.forest" "ext/forest.forest")
(list (list '@.:
    (cons (lmt 0 1371 1388 "@.:" (lmt 0 1376 1379 "var" (lmtk 1 1 1 "f")) (lmt 0 1379 1382 "var" (lmtk 1 1 1 "n")) (lmt 0 1382 1386 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1388 1414 "@" (lmt 0 1391 1394 "var" (lmtk 1 1 1 "n")) (lmt 0 1394 1413 "+" (lmt 0 1397 1400 "var" (lmtk 1 1 1 "f")) (lmt 0 1400 1408 "kw" (lmt 0 1404 1406 "var" (lmtk 1 1 1 "n"))) (lmt 0 1408 1412 "varlist" (lmtk 1 1 1 "r"))))))
  (list 'body-braces$
    (cons (lmt 0 1095 1113 "body-braces$" (lmt 0 1109 1111 "var" (lmtk 1 1 1 "c"))) (lmt 0 1113 1207 "@" (lmt 0 1116 1123 "string" (lmtk 1 1 1 "body")) (lmt 0 1123 1206 "+" (lmt 0 1126 1136 "tok" (lmt 0 1131 1134 "string" (lmtk 1 1 1 "{"))) (lmt 0 1136 1205 "$" (lmt 0 1139 1156 "+" (lmt 0 1142 1145 "var" (lmtk 1 1 1 "c")) (lmt 0 1145 1154 "tok" (lmt 0 1150 1153 "string" (lmtk 1 1 1 "}")))) (lmt 0 1156 1204 "string" (lmtk 1 1 1 "could not find '}' closing the definition body")))))))
  (list '*
    (cons (lmt #f #f #f "*" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "%*%" (lmt #f #f #f "newname" ) (lmt #f #f #f "var" (lmtk 1 1 1 "c")))))
  (list '@.$:
    (cons (lmt 0 1431 1449 "@.$:" (lmt 0 1437 1440 "var" (lmtk 1 1 1 "f")) (lmt 0 1440 1443 "var" (lmtk 1 1 1 "n")) (lmt 0 1443 1447 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1449 1514 "@" (lmt 0 1452 1455 "var" (lmtk 1 1 1 "n")) (lmt 0 1455 1513 "+" (lmt 0 1458 1461 "var" (lmtk 1 1 1 "f")) (lmt 0 1461 1469 "kw" (lmt 0 1465 1467 "var" (lmtk 1 1 1 "n"))) (lmt 0 1469 1512 "$" (lmt 0 1472 1481 "+" (lmt 0 1475 1479 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1481 1484 "var" (lmtk 1 1 1 "n")) (lmt 0 1484 1511 "string" (lmtk 1 1 1 ": statement not completed")))))))
  (list 'kw
    (cons (lmt 0 1532 1540 "kw" (lmt 0 1536 1538 "var" (lmtk 1 1 1 "c"))) (lmt 0 1540 1587 "tok" (lmt 0 1545 1586 "insert" (lmt 0 1553 1561 "name" (lmtk 1 1 1 "keyword")) (lmt 0 1561 1585 "+" (lmt 0 1564 1567 "var" (lmtk 1 1 1 "c")) (lmt 0 1567 1584 "!" (lmt 0 1570 1583 "name" (lmtk 1 1 1 "letterordigit"))))))))
  (list 'parens
    (cons (lmt 0 493 505 "parens" (lmt 0 501 503 "var" (lmtk 1 1 1 "c"))) (lmt 0 505 531 "+" (lmt 0 508 518 "tok" (lmt 0 513 516 "string" (lmtk 1 1 1 "("))) (lmt 0 518 521 "var" (lmtk 1 1 1 "c")) (lmt 0 521 530 "tok" (lmt 0 526 529 "string" (lmtk 1 1 1 ")")))))
    (cons (lmt #f #f #f "parens" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "+" (lmt #f #f #f "tok" (lmt #f #f #f "string" (lmtk 1 1 1 "("))) (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "tok" (lmt #f #f #f "string" (lmtk 1 1 1 ")"))))))
  (list '&
    (cons (lmt #f #f #f "&" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "!" (lmt #f #f #f "!" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))))))
  (list '%*%
    (cons (lmt #f #f #f "%*%" (lmt #f #f #f "var" (lmtk 1 1 1 "n")) (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "rule" (lmt #f #f #f "var" (lmtk 1 1 1 "n")) (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "var" (lmtk 1 1 1 "n"))) (lmt #f #f #f "null" )))))
  (list '?
    (cons (lmt #f #f #f "?" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "/" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "null" ))))
  (list 'oper
    (cons (lmt 0 1604 1614 "oper" (lmt 0 1610 1612 "var" (lmtk 1 1 1 "c"))) (lmt 0 1614 1643 "tok" (lmt 0 1619 1642 "+" (lmt 0 1622 1625 "var" (lmtk 1 1 1 "c")) (lmt 0 1625 1641 "!" (lmt 0 1628 1640 "name" (lmtk 1 1 1 "operatorchar")))))))
  (list '@:
    (cons (lmt 0 1225 1238 "@:" (lmt 0 1229 1232 "var" (lmtk 1 1 1 "n")) (lmt 0 1232 1236 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1238 1261 "@" (lmt 0 1241 1244 "var" (lmtk 1 1 1 "n")) (lmt 0 1244 1260 "+" (lmt 0 1247 1255 "kw" (lmt 0 1251 1253 "var" (lmtk 1 1 1 "n"))) (lmt 0 1255 1259 "varlist" (lmtk 1 1 1 "r"))))))
  (list 'brackets$
    (cons (lmt 0 811 826 "brackets$" (lmt 0 822 824 "var" (lmtk 1 1 1 "c"))) (lmt 0 826 889 "+" (lmt 0 829 839 "tok" (lmt 0 834 837 "string" (lmtk 1 1 1 "["))) (lmt 0 839 888 "$" (lmt 0 842 859 "+" (lmt 0 845 848 "var" (lmtk 1 1 1 "c")) (lmt 0 848 857 "tok" (lmt 0 853 856 "string" (lmtk 1 1 1 "]")))) (lmt 0 859 887 "string" (lmtk 1 1 1 "could not find closing ']'"))))))
  (list 'brackets
    (cons (lmt 0 548 562 "brackets" (lmt 0 558 560 "var" (lmtk 1 1 1 "c"))) (lmt 0 562 588 "+" (lmt 0 565 575 "tok" (lmt 0 570 573 "string" (lmtk 1 1 1 "["))) (lmt 0 575 578 "var" (lmtk 1 1 1 "c")) (lmt 0 578 587 "tok" (lmt 0 583 586 "string" (lmtk 1 1 1 "]"))))))
  (list '*+
    (cons (lmt 0 415 425 "*+" (lmt 0 419 423 "varlist" (lmtk 1 1 1 "c"))) (lmt 0 425 437 "*" (lmt 0 428 436 "+" (lmt 0 431 435 "varlist" (lmtk 1 1 1 "c"))))))
  (list 'tr-seq
    (cons (lmt 0 233 248 "tr-seq" (lmt 0 241 244 "var" (lmtk 1 1 1 "i")) (lmt 0 244 246 "var" (lmtk 1 1 1 "s"))) (lmt 0 248 270 "+" (lmt 0 251 263 "seq" (lmt 0 256 259 "var" (lmtk 1 1 1 "i")) (lmt 0 259 261 "var" (lmtk 1 1 1 "s"))) (lmt 0 263 269 "?" (lmt 0 266 268 "var" (lmtk 1 1 1 "s"))))))
  (list '?+
    (cons (lmt 0 376 386 "?+" (lmt 0 380 384 "varlist" (lmtk 1 1 1 "c"))) (lmt 0 386 398 "?" (lmt 0 389 397 "+" (lmt 0 392 396 "varlist" (lmtk 1 1 1 "c"))))))
  (list 'seq
    (cons (lmt 0 184 196 "seq" (lmt 0 189 192 "var" (lmtk 1 1 1 "i")) (lmt 0 192 194 "var" (lmtk 1 1 1 "s"))) (lmt 0 196 216 "+" (lmt 0 199 202 "var" (lmtk 1 1 1 "i")) (lmt 0 202 215 "*" (lmt 0 205 214 "+" (lmt 0 208 211 "var" (lmtk 1 1 1 "s")) (lmt 0 211 213 "var" (lmtk 1 1 1 "i")))))))
  (list 'braces
    (cons (lmt 0 605 617 "braces" (lmt 0 613 615 "var" (lmtk 1 1 1 "c"))) (lmt 0 617 643 "+" (lmt 0 620 630 "tok" (lmt 0 625 628 "string" (lmtk 1 1 1 "{"))) (lmt 0 630 633 "var" (lmtk 1 1 1 "c")) (lmt 0 633 642 "tok" (lmt 0 638 641 "string" (lmtk 1 1 1 "}"))))))
  (list 'list
    (cons (lmt 0 287 297 "list" (lmt 0 293 295 "var" (lmtk 1 1 1 "c"))) (lmt 0 297 311 "seq" (lmt 0 302 305 "var" (lmtk 1 1 1 "c")) (lmt 0 305 310 "name" (lmtk 1 1 1 "comma")))))
  (list 'chevrons
    (cons (lmt 0 660 674 "chevrons" (lmt 0 670 672 "var" (lmtk 1 1 1 "c"))) (lmt 0 674 700 "+" (lmt 0 677 687 "tok" (lmt 0 682 685 "string" (lmtk 1 1 1 "<"))) (lmt 0 687 690 "var" (lmtk 1 1 1 "c")) (lmt 0 690 699 "tok" (lmt 0 695 698 "string" (lmtk 1 1 1 ">"))))))
  (list 'parens$
    (cons (lmt 0 718 731 "parens$" (lmt 0 727 729 "var" (lmtk 1 1 1 "c"))) (lmt 0 731 794 "+" (lmt 0 734 744 "tok" (lmt 0 739 742 "string" (lmtk 1 1 1 "("))) (lmt 0 744 793 "$" (lmt 0 747 764 "+" (lmt 0 750 753 "var" (lmtk 1 1 1 "c")) (lmt 0 753 762 "tok" (lmt 0 758 761 "string" (lmtk 1 1 1 ")")))) (lmt 0 764 792 "string" (lmtk 1 1 1 "could not find closing ')'"))))))
  (list 'tr-list
    (cons (lmt 0 328 341 "tr-list" (lmt 0 337 339 "var" (lmtk 1 1 1 "c"))) (lmt 0 341 358 "tr-seq" (lmt 0 349 352 "var" (lmtk 1 1 1 "c")) (lmt 0 352 357 "name" (lmtk 1 1 1 "comma")))))
  (list 'tok
    (cons (lmt #f #f #f "tok" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))
  (list '*1
    (cons (lmt 0 454 462 "*1" (lmt 0 458 460 "var" (lmtk 1 1 1 "c"))) (lmt 0 462 475 "+" (lmt 0 465 468 "var" (lmtk 1 1 1 "c")) (lmt 0 468 474 "*" (lmt 0 471 473 "var" (lmtk 1 1 1 "c"))))))
  (list 'sym
    (cons (lmt #f #f #f "sym" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "tok" (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))))))
  (list 'braces$
    (cons (lmt 0 906 919 "braces$" (lmt 0 915 917 "var" (lmtk 1 1 1 "c"))) (lmt 0 919 982 "+" (lmt 0 922 932 "tok" (lmt 0 927 930 "string" (lmtk 1 1 1 "{"))) (lmt 0 932 981 "$" (lmt 0 935 952 "+" (lmt 0 938 941 "var" (lmtk 1 1 1 "c")) (lmt 0 941 950 "tok" (lmt 0 946 949 "string" (lmtk 1 1 1 "}")))) (lmt 0 952 980 "string" (lmtk 1 1 1 "could not find closing '}'"))))))
  (list '@$:
    (cons (lmt 0 1278 1292 "@$:" (lmt 0 1283 1286 "var" (lmtk 1 1 1 "n")) (lmt 0 1286 1290 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1292 1354 "@" (lmt 0 1295 1298 "var" (lmtk 1 1 1 "n")) (lmt 0 1298 1353 "+" (lmt 0 1301 1309 "kw" (lmt 0 1305 1307 "var" (lmtk 1 1 1 "n"))) (lmt 0 1309 1352 "$" (lmt 0 1312 1321 "+" (lmt 0 1315 1319 "varlist" (lmtk 1 1 1 "r"))) (lmt 0 1321 1324 "var" (lmtk 1 1 1 "n")) (lmt 0 1324 1351 "string" (lmtk 1 1 1 ": statement not completed")))))))
  (list 'chevrons$
    (cons (lmt 0 999 1014 "chevrons$" (lmt 0 1010 1012 "var" (lmtk 1 1 1 "c"))) (lmt 0 1014 1077 "+" (lmt 0 1017 1027 "tok" (lmt 0 1022 1025 "string" (lmtk 1 1 1 "<"))) (lmt 0 1027 1076 "$" (lmt 0 1030 1047 "+" (lmt 0 1033 1036 "var" (lmtk 1 1 1 "c")) (lmt 0 1036 1045 "tok" (lmt 0 1041 1044 "string" (lmtk 1 1 1 ">")))) (lmt 0 1047 1075 "string" (lmtk 1 1 1 "could not find closing '>'")))))))
(list (cons 'endoffile (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "anychar"))))
  (cons 'null (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'declaration (lmt #f #f #f ">" (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))))
  (cons 'namechars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "namechars"))) (lmt #f #f #f "null" )))
  (cons 'newline (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "returnchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linefeedchar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "returnchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linefeedchar"))))
  (cons 'name (lmt #f #f #f "//" (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "var")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "'")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "varlist")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "'''")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))))
  (cons 'whitespace (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "/" (lmt #f #f #f "name" (lmtk 1 1 1 "whitespacechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linecomment"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt #f #f #f "null" )))
  (cons 'nameliteral (lmt #f #f #f "+" (lmt #f #f #f "<" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "namechars")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'start (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "declarations")) (lmt #f #f #f "name" (lmtk 1 1 1 "endoffile"))))
  (cons 'linecomment (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ";")) (lmt #f #f #f "name" (lmtk 1 1 1 "commentchars")) (lmt #f #f #f "name" (lmtk 1 1 1 "newline"))))
  (cons 'namechar (lmt #f #f #f "/" (lmt #f #f #f "name" (lmtk 1 1 1 "letterchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "digitchar")) (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "string" (lmtk 1 1 1 "=")) (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "string" (lmtk 1 1 1 "^")) (lmt #f #f #f "string" (lmtk 1 1 1 "`")) (lmt #f #f #f "string" (lmtk 1 1 1 "|")) (lmt #f #f #f "string" (lmtk 1 1 1 "~")) (lmt #f #f #f "string" (lmtk 1 1 1 "_")) (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "string" (lmtk 1 1 1 "%")) (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "string" (lmtk 1 1 1 "-")) (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "string" (lmtk 1 1 1 ":")) (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "string" (lmtk 1 1 1 "."))))
  (cons 'declarations (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "declaration")) (lmt #f #f #f "name" (lmtk 1 1 1 "declarations"))) (lmt #f #f #f "null" )))
  (cons 'commentchars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "newline"))) (lmt #f #f #f "name" (lmtk 1 1 1 "anychar")) (lmt #f #f #f "name" (lmtk 1 1 1 "commentchars"))) (lmt #f #f #f "null" )))
  (cons 'stringchars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "anychar")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "null" )))
  (cons 'sexpr (lmt #f #f #f "//" (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "[")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ":")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "null" )) (lmt #f #f #f "string" (lmtk 1 1 1 "]")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unreplaced")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "unreplaced")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "parens")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "parens")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "null")) (lmt #f #f #f "name" (lmtk 1 1 1 "null"))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^<")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^<")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^=")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^=")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^>")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^>")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "//")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "//")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "import")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "import")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringliteral")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "newname")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "newname")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "insert")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "insert")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "rule")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "rule")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "pattern")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "syntaxpattern")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "string")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringliteral"))) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "%*%")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "%*%")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "tok")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "tok")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "sym")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "sym")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "pattern")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "termpattern")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "token")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "#")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "<" (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))))
  (cons 'stringliteral (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "<" (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'sexprs (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "null" )))))