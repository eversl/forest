(make-lang (list "grammars/functional.patterns.forest" "grammars/standard.rules.forest" "grammars/standard.patterns.forest" "grammars/core.rules.forest" "grammars/core.patterns.forest" "ext/forest.forest")
(list (list '*
    (cons (lmt #f #f #f "*" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "%*%" (lmt #f #f #f "newname" ) (lmt #f #f #f "var" (lmtk 1 1 1 "c")))))
  (list 'varfunctionref
    (cons (lmt #f #f #f "varfunctionref" (lmt 0 3737 3746 "var" (lmtk 1 1 1 "varname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" (lmt 0 3772 3783 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f "lst" (lmt 0 3792 3799 "varlist" (lmtk 1 1 1 "args"))))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt 0 3831 3842 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f (mt "var" (mt "var" "varname")) (lmt 0 3869 3876 "varlist" (lmtk 1 1 1 "args")))))
    (cons (lmt #f #f #f "varfunctionref" (lmt 0 3596 3605 "var" (lmtk 1 1 1 "varname")) (lmt #f #f #f "functionargs" (lmt 0 3621 3628 "varlist" (lmtk 1 1 1 "args")))) (lmt #f #f #f "varfunctionref" (lmt 0 3651 3660 "var" (lmtk 1 1 1 "varname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" ) (lmt #f #f #f "lst" ) (lmt 0 3691 3698 "varlist" (lmtk 1 1 1 "args"))))))
  (list 'variable
    (cons (lmt #f #f #f "variable" (lmt 0 3405 3407 "var" (lmtk 1 1 1 "v"))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt #f #f #f "var" (lmt 0 3444 3446 "var" (lmtk 1 1 1 "v")))) (lmt #f #f #f "var" (lmt 0 3456 3458 "var" (lmtk 1 1 1 "v"))))))
  (list 'setdiff
    (cons (lmt #f #f #f "setdiff" (lmt #f #f #f "lst" (lmt 0 4014 4022 "varlist" (lmtk 1 1 1 "elems"))) (lmt #f #f #f "lst" (lmt 0 4031 4037 "var" (lmtk 1 1 1 "elem")) (lmt 0 4037 4046 "varlist" (lmtk 1 1 1 "elems2")))) (lmt #f #f #f "setdiff" (lmt #f #f #f "remove-elem" (lmt 0 4078 4084 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4091 4099 "varlist" (lmtk 1 1 1 "elems")))) (lmt #f #f #f "lst" (lmt 0 4109 4118 "varlist" (lmtk 1 1 1 "elems2")))))
    (cons (lmt #f #f #f "setdiff" (lmt #f #f #f "lst" (lmt 0 3942 3950 "varlist" (lmtk 1 1 1 "elems"))) (lmt #f #f #f "lst" )) (lmt #f #f #f "lst" (lmt 0 3969 3977 "varlist" (lmtk 1 1 1 "elems")))))
  (list 'namedanondef-xf2
    (cons (lmt #f #f #f "namedanondef-xf2" (lmt 0 2160 2167 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 2174 2188 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" (lmt 0 2197 2205 "varlist" (lmtk 1 1 1 "ready")))) (lmt #f #f #f "namedanondef-xf3" (lmt 0 2231 2238 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "flatten-lst" (lmt 0 2253 2267 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" (lmt 0 2276 2284 "varlist" (lmtk 1 1 1 "ready")))))
    (cons (lmt #f #f #f "namedanondef-xf2" (lmt 0 1818 1825 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 1832 1846 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" (lmt 0 1855 1863 "varlist" (lmtk 1 1 1 "ready"))) (lmt #f #f #f "anondefcase-xf" (lmt #f #f #f "functionargs-xf" (lmt 0 1902 1912 "var" (lmtk 1 1 1 "pattvars")) (lmt 0 1912 1920 "var" (lmtk 1 1 1 "funargs"))) (lmt #f #f #f "functionalexpr" (lmt 0 1940 1950 "var" (lmtk 1 1 1 "replvars")) (lmt 0 1950 1955 "var" (lmtk 1 1 1 "repl")))) (lmt 0 1958 1969 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "namedanondef-xf2" (lmt 0 1994 2001 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 2008 2023 "varlist" (lmtk 1 1 1 "closurevars")) (lmt #f #f #f "setdiff" (lmt 0 2034 2044 "var" (lmtk 1 1 1 "replvars")) (lmt 0 2044 2053 "var" (lmtk 1 1 1 "pattvars")))) (lmt #f #f #f "lst" (lmt 0 2063 2072 "varlist" (lmtk 1 1 1 "ready")) (lmt #f #f #f "anondefcase-xf2" (lmt 0 2091 2100 "var" (lmtk 1 1 1 "funargs")) (lmt 0 2100 2105 "var" (lmtk 1 1 1 "repl")))) (lmt 0 2108 2119 "varlist" (lmtk 1 1 1 "defcases")))))
  (list 'defcase-xf
    (cons (lmt #f #f #f "defcase-xf" (lmt 0 896 903 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" (lmt 0 929 940 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f "lst" (lmt 0 949 956 "varlist" (lmtk 1 1 1 "args")))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt 0 984 988 "varlist" (lmtk 1 1 1 "v"))) (lmt 0 990 994 "var" (lmtk 1 1 1 "res")))) (lmt 0 1010 1050 "term" (lmt 0 1011 1019 "name" (lmtk 1 1 1 "pattern")) (lmt 0 1021 1045 "term" (lmt 0 1022 1027 "name" (lmtk 1 1 1 "term")) (lmt 0 1029 1036 "var" (lmtk 1 1 1 "fname")) (lmt 0 1036 1043 "varlist" (lmtk 1 1 1 "args"))) (lmt 0 1045 1049 "var" (lmtk 1 1 1 "res"))))
    (cons (lmt #f #f #f "defcase-xf" (lmt 0 759 766 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "functionargs" (lmt 0 782 789 "varlist" (lmtk 1 1 1 "args"))) (lmt 0 791 795 "var" (lmtk 1 1 1 "res"))) (lmt #f #f #f "defcase-xf" (lmt 0 812 819 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" ) (lmt #f #f #f "lst" ) (lmt 0 850 857 "varlist" (lmtk 1 1 1 "args"))) (lmt 0 859 863 "var" (lmtk 1 1 1 "res")))))
  (list 'functiondef
    (cons (lmt #f #f #f "functiondef" (lmt 0 237 248 "var" (lmtk 1 1 1 "fname")) (lmt 0 248 259 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "functiondef-xf" (lmt 0 281 288 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" ) (lmt 0 294 305 "varlist" (lmtk 1 1 1 "defcases")))))
  (list 'namedanondef
    (cons (lmt #f #f #f "namedanondef" (lmt #f #f #f "name" (lmt 0 1411 1417 "var" (lmtk 1 1 1 "fname"))) (lmt 0 1419 1430 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "namedanondef-xf" (lmt 0 1453 1460 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" ) (lmt 0 1466 1477 "varlist" (lmtk 1 1 1 "defcases")))))
  (list '&
    (cons (lmt #f #f #f "&" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "!" (lmt #f #f #f "!" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))))))
  (list 'remove-elem-xf
    (cons (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" (lmt 0 4588 4595 "varlist" (lmtk 1 1 1 "done"))) (lmt 0 4597 4603 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" )) (lmt #f #f #f "lst" (lmt 0 4620 4627 "varlist" (lmtk 1 1 1 "done"))))
    (cons (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" (lmt 0 4438 4445 "varlist" (lmtk 1 1 1 "done"))) (lmt 0 4447 4453 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4460 4467 "var" (lmtk 1 1 1 "elem2")) (lmt 0 4467 4475 "varlist" (lmtk 1 1 1 "elems")))) (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" (lmt 0 4506 4514 "varlist" (lmtk 1 1 1 "done")) (lmt 0 4514 4520 "var" (lmtk 1 1 1 "elem2"))) (lmt 0 4522 4528 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4535 4543 "varlist" (lmtk 1 1 1 "elems")))))
    (cons (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" (lmt 0 4296 4303 "varlist" (lmtk 1 1 1 "done"))) (lmt 0 4305 4311 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4318 4324 "var" (lmtk 1 1 1 "elem")) (lmt 0 4324 4332 "varlist" (lmtk 1 1 1 "elems")))) (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" (lmt 0 4363 4370 "varlist" (lmtk 1 1 1 "done"))) (lmt 0 4372 4378 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4385 4393 "varlist" (lmtk 1 1 1 "elems"))))))
  (list '?
    (cons (lmt #f #f #f "?" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "/" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "null" ))))
  (list '@:
    (cons (lmt 2 1225 1238 "@:" (lmt 2 1229 1232 "var" (lmtk 1 1 1 "n")) (lmt 2 1232 1236 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1238 1261 "@" (lmt 2 1241 1244 "var" (lmtk 1 1 1 "n")) (lmt 2 1244 1260 "+" (lmt 2 1247 1255 "kw" (lmt 2 1251 1253 "var" (lmtk 1 1 1 "n"))) (lmt 2 1255 1259 "varlist" (lmtk 1 1 1 "r"))))))
  (list 'braces$
    (cons (lmt 2 906 919 "braces$" (lmt 2 915 917 "var" (lmtk 1 1 1 "c"))) (lmt 2 919 982 "+" (lmt 2 922 932 "tok" (lmt 2 927 930 "string" (lmtk 1 1 1 "{"))) (lmt 2 932 981 "$" (lmt 2 935 952 "+" (lmt 2 938 941 "var" (lmtk 1 1 1 "c")) (lmt 2 941 950 "tok" (lmt 2 946 949 "string" (lmtk 1 1 1 "}")))) (lmt 2 952 980 "string" (lmtk 1 1 1 "could not find closing '}'"))))))
  (list 'chevrons
    (cons (lmt 2 660 674 "chevrons" (lmt 2 670 672 "var" (lmtk 1 1 1 "c"))) (lmt 2 674 700 "+" (lmt 2 677 687 "tok" (lmt 2 682 685 "string" (lmtk 1 1 1 "<"))) (lmt 2 687 690 "var" (lmtk 1 1 1 "c")) (lmt 2 690 699 "tok" (lmt 2 695 698 "string" (lmtk 1 1 1 ">"))))))
  (list 'tr-list
    (cons (lmt 2 328 341 "tr-list" (lmt 2 337 339 "var" (lmtk 1 1 1 "c"))) (lmt 2 341 358 "tr-seq" (lmt 2 349 352 "var" (lmtk 1 1 1 "c")) (lmt 2 352 357 "name" (lmtk 1 1 1 "comma")))))
  (list 'seq
    (cons (lmt 2 184 196 "seq" (lmt 2 189 192 "var" (lmtk 1 1 1 "i")) (lmt 2 192 194 "var" (lmtk 1 1 1 "s"))) (lmt 2 196 216 "+" (lmt 2 199 202 "var" (lmtk 1 1 1 "i")) (lmt 2 202 215 "*" (lmt 2 205 214 "+" (lmt 2 208 211 "var" (lmtk 1 1 1 "s")) (lmt 2 211 213 "var" (lmtk 1 1 1 "i")))))))
  (list '@.:
    (cons (lmt 2 1371 1388 "@.:" (lmt 2 1376 1379 "var" (lmtk 1 1 1 "f")) (lmt 2 1379 1382 "var" (lmtk 1 1 1 "n")) (lmt 2 1382 1386 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1388 1414 "@" (lmt 2 1391 1394 "var" (lmtk 1 1 1 "n")) (lmt 2 1394 1413 "+" (lmt 2 1397 1400 "var" (lmtk 1 1 1 "f")) (lmt 2 1400 1408 "kw" (lmt 2 1404 1406 "var" (lmtk 1 1 1 "n"))) (lmt 2 1408 1412 "varlist" (lmtk 1 1 1 "r"))))))
  (list 'body-braces$
    (cons (lmt 2 1095 1113 "body-braces$" (lmt 2 1109 1111 "var" (lmtk 1 1 1 "c"))) (lmt 2 1113 1207 "@" (lmt 2 1116 1123 "string" (lmtk 1 1 1 "body")) (lmt 2 1123 1206 "+" (lmt 2 1126 1136 "tok" (lmt 2 1131 1134 "string" (lmtk 1 1 1 "{"))) (lmt 2 1136 1205 "$" (lmt 2 1139 1156 "+" (lmt 2 1142 1145 "var" (lmtk 1 1 1 "c")) (lmt 2 1145 1154 "tok" (lmt 2 1150 1153 "string" (lmtk 1 1 1 "}")))) (lmt 2 1156 1204 "string" (lmtk 1 1 1 "could not find '}' closing the definition body")))))))
  (list 'brackets
    (cons (lmt 2 548 562 "brackets" (lmt 2 558 560 "var" (lmtk 1 1 1 "c"))) (lmt 2 562 588 "+" (lmt 2 565 575 "tok" (lmt 2 570 573 "string" (lmtk 1 1 1 "["))) (lmt 2 575 578 "var" (lmtk 1 1 1 "c")) (lmt 2 578 587 "tok" (lmt 2 583 586 "string" (lmtk 1 1 1 "]"))))))
  (list 'tr-seq
    (cons (lmt 2 233 248 "tr-seq" (lmt 2 241 244 "var" (lmtk 1 1 1 "i")) (lmt 2 244 246 "var" (lmtk 1 1 1 "s"))) (lmt 2 248 270 "+" (lmt 2 251 263 "seq" (lmt 2 256 259 "var" (lmtk 1 1 1 "i")) (lmt 2 259 261 "var" (lmtk 1 1 1 "s"))) (lmt 2 263 269 "?" (lmt 2 266 268 "var" (lmtk 1 1 1 "s"))))))
  (list '*+
    (cons (lmt 2 415 425 "*+" (lmt 2 419 423 "varlist" (lmtk 1 1 1 "c"))) (lmt 2 425 437 "*" (lmt 2 428 436 "+" (lmt 2 431 435 "varlist" (lmtk 1 1 1 "c"))))))
  (list 'sym
    (cons (lmt #f #f #f "sym" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "tok" (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))))))
  (list 'kw
    (cons (lmt 2 1532 1540 "kw" (lmt 2 1536 1538 "var" (lmtk 1 1 1 "c"))) (lmt 2 1540 1587 "tok" (lmt 2 1545 1586 "insert" (lmt 2 1553 1561 "name" (lmtk 1 1 1 "keyword")) (lmt 2 1561 1585 "+" (lmt 2 1564 1567 "var" (lmtk 1 1 1 "c")) (lmt 2 1567 1584 "!" (lmt 2 1570 1583 "name" (lmtk 1 1 1 "letterordigit"))))))))
  (list 'listvariable
    (cons (lmt #f #f #f "listvariable" (lmt 0 3495 3497 "var" (lmtk 1 1 1 "v"))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt #f #f #f "varlist" (lmt 0 3538 3540 "var" (lmtk 1 1 1 "v")))) (lmt #f #f #f "varlist" (lmt 0 3554 3556 "var" (lmtk 1 1 1 "v"))))))
  (list 'functionref
    (cons (lmt #f #f #f "functionref" (lmt 0 3241 3250 "var" (lmtk 1 1 1 "patname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" (lmt 0 3276 3287 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f "lst" (lmt 0 3296 3303 "varlist" (lmtk 1 1 1 "args"))))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt 0 3335 3346 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f (mt "var" "patname") (lmt 0 3365 3372 "varlist" (lmtk 1 1 1 "args")))))
    (cons (lmt #f #f #f "functionref" (lmt 0 3105 3114 "var" (lmtk 1 1 1 "patname")) (lmt #f #f #f "functionargs" (lmt 0 3130 3137 "varlist" (lmtk 1 1 1 "args")))) (lmt #f #f #f "functionref" (lmt 0 3158 3167 "var" (lmtk 1 1 1 "patname")) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" ) (lmt #f #f #f "lst" ) (lmt 0 3198 3205 "varlist" (lmtk 1 1 1 "args"))))))
  (list 'namedanondef-xf3
    (cons (lmt #f #f #f "namedanondef-xf3" (lmt 0 2616 2623 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 2630 2644 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" ) (lmt 0 2652 2659 "varlist" (lmtk 1 1 1 "done"))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt 0 2689 2703 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "closure" (lmt 0 2752 2892 "term" (lmt 0 2753 2761 "name" (lmtk 1 1 1 "pattern")) (lmt 0 2769 2809 "term" (lmt 0 2770 2775 "name" (lmtk 1 1 1 "term")) (lmt 0 2777 2784 "var" (lmtk 1 1 1 "fname")) (lmt 0 2784 2801 "unreplaced" (lmt 0 2796 2800 "varlist" (lmtk 1 1 1 "r")))) (lmt 0 2809 2891 "unexpanded" (lmt 0 2821 2890 "unexpanded" (lmt 0 2833 2889 "term" (lmt 0 2834 2840 "name" (lmtk 1 1 1 "error")) (lmt 0 2842 2877 "string" (lmtk 1 1 1 "Invalid use of closure pattern '")) (lmt 0 2877 2884 "var" (lmtk 1 1 1 "fname")) (lmt 0 2884 2888 "string" (lmtk 1 1 1 "'.")))))) (lmt 0 2896 2910 "varlist" (lmtk 1 1 1 "closurevars")))))
    (cons (lmt #f #f #f "namedanondef-xf3" (lmt 0 2325 2332 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 2339 2353 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" (lmt #f #f #f "anondefcase-xf2" (lmt #f #f #f "lst" (lmt 0 2388 2395 "varlist" (lmtk 1 1 1 "patt"))) (lmt 0 2397 2402 "var" (lmtk 1 1 1 "repl"))) (lmt 0 2404 2412 "varlist" (lmtk 1 1 1 "cases"))) (lmt 0 2414 2421 "varlist" (lmtk 1 1 1 "done"))) (lmt #f #f #f "namedanondef-xf3" (lmt 0 2446 2453 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 2460 2474 "varlist" (lmtk 1 1 1 "closurevars"))) (lmt #f #f #f "lst" (lmt 0 2483 2491 "varlist" (lmtk 1 1 1 "cases"))) (lmt 0 2517 2573 "term" (lmt 0 2518 2526 "name" (lmtk 1 1 1 "pattern")) (lmt 0 2528 2567 "term" (lmt 0 2529 2534 "name" (lmtk 1 1 1 "term")) (lmt 0 2536 2543 "var" (lmtk 1 1 1 "fname")) (lmt 0 2543 2558 "varlist" (lmtk 1 1 1 "closurevars")) (lmt 0 2558 2565 "varlist" (lmtk 1 1 1 "patt"))) (lmt 0 2567 2572 "var" (lmtk 1 1 1 "repl"))))))
  (list 'anondefcase-xf
    (cons (lmt #f #f #f "anondefcase-xf" (lmt #f #f #f "functionargs" (lmt 0 2964 2971 "varlist" (lmtk 1 1 1 "args"))) (lmt 0 2973 2978 "var" (lmtk 1 1 1 "repl"))) (lmt #f #f #f "anondefcase-xf" (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" ) (lmt #f #f #f "lst" ) (lmt 0 3030 3037 "varlist" (lmtk 1 1 1 "args"))) (lmt 0 3039 3044 "var" (lmtk 1 1 1 "repl")))))
  (list 'anondef
    (cons (lmt #f #f #f "anondef" (lmt 0 1302 1313 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "namedanondef" (lmt #f #f #f "name" "g53") (lmt 0 1356 1367 "varlist" (lmtk 1 1 1 "defcases")))))
  (list 'functionargs-xf
    (cons (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" (lmt 0 1095 1106 "varlist" (lmtk 1 1 1 "usedvars"))) (lmt #f #f #f "lst" (lmt 0 1115 1122 "varlist" (lmtk 1 1 1 "done"))) (lmt #f #f #f "functionalexpr" (lmt #f #f #f "lst" (lmt 0 1149 1156 "varlist" (lmtk 1 1 1 "vars"))) (lmt 0 1158 1162 "var" (lmtk 1 1 1 "arg"))) (lmt 0 1164 1171 "varlist" (lmtk 1 1 1 "args"))) (lmt #f #f #f "functionargs-xf" (lmt #f #f #f "lst" (lmt 0 1200 1212 "varlist" (lmtk 1 1 1 "usedvars")) (lmt 0 1212 1219 "varlist" (lmtk 1 1 1 "vars"))) (lmt #f #f #f "lst" (lmt 0 1228 1237 "varlist" (lmtk 1 1 1 "done")) (lmt 0 1237 1241 "var" (lmtk 1 1 1 "arg"))) (lmt 0 1243 1250 "varlist" (lmtk 1 1 1 "args")))))
  (list 'functiondef-xf
    (cons (lmt #f #f #f "functiondef-xf" (lmt 0 530 537 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 544 552 "varlist" (lmtk 1 1 1 "ready")))) (lmt 0 558 727 "+" (lmt 0 561 570 "varlist" (lmtk 1 1 1 "ready")) (lmt 0 582 725 "term" (lmt 0 583 591 "name" (lmtk 1 1 1 "pattern")) (lmt 0 599 639 "term" (lmt 0 600 605 "name" (lmtk 1 1 1 "term")) (lmt 0 607 614 "var" (lmtk 1 1 1 "fname")) (lmt 0 614 631 "unreplaced" (lmt 0 626 630 "varlist" (lmtk 1 1 1 "r")))) (lmt 0 639 724 "unexpanded" (lmt 0 651 723 "unexpanded" (lmt 0 663 722 "term" (lmt 0 664 670 "name" (lmtk 1 1 1 "error")) (lmt 0 672 710 "string" (lmtk 1 1 1 "Invalid use of functional pattern '")) (lmt 0 710 717 "var" (lmtk 1 1 1 "fname")) (lmt 0 717 721 "string" (lmtk 1 1 1 "'."))))))))
    (cons (lmt #f #f #f "functiondef-xf" (lmt 0 342 349 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 356 364 "varlist" (lmtk 1 1 1 "ready"))) (lmt #f #f #f "defcase" (lmt 0 377 383 "var" (lmtk 1 1 1 "patt")) (lmt 0 383 388 "var" (lmtk 1 1 1 "repl"))) (lmt 0 390 401 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "functiondef-xf" (lmt 0 422 429 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 436 445 "varlist" (lmtk 1 1 1 "ready")) (lmt #f #f #f "defcase-xf" (lmt 0 459 466 "var" (lmtk 1 1 1 "fname")) (lmt 0 466 472 "var" (lmtk 1 1 1 "patt")) (lmt 0 472 477 "var" (lmtk 1 1 1 "repl")))) (lmt 0 480 491 "varlist" (lmtk 1 1 1 "defcases")))))
  (list 'flatten-lst
    (cons (lmt #f #f #f "flatten-lst" (lmt #f #f #f "lst" )) (lmt #f #f #f "lst" ))
    (cons (lmt #f #f #f "flatten-lst" (lmt #f #f #f "lst" (lmt 0 4817 4824 "varlist" (lmtk 1 1 1 "lst1")))) (lmt #f #f #f "lst" (lmt 0 4837 4844 "varlist" (lmtk 1 1 1 "lst1"))))
    (cons (lmt #f #f #f "flatten-lst" (lmt #f #f #f "lst" (lmt 0 4693 4700 "varlist" (lmtk 1 1 1 "lst1"))) (lmt #f #f #f "lst" (lmt 0 4709 4716 "varlist" (lmtk 1 1 1 "lst2"))) (lmt 0 4718 4725 "varlist" (lmtk 1 1 1 "rest"))) (lmt #f #f #f "flatten-lst" (lmt #f #f #f "lst" (lmt 0 4752 4760 "varlist" (lmtk 1 1 1 "lst1")) (lmt 0 4760 4767 "varlist" (lmtk 1 1 1 "lst2"))) (lmt 0 4769 4776 "varlist" (lmtk 1 1 1 "rest")))))
  (list 'namedanondef-xf
    (cons (lmt #f #f #f "namedanondef-xf" (lmt 0 1702 1709 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 1716 1724 "varlist" (lmtk 1 1 1 "ready")))) (lmt #f #f #f "namedanondef-xf2" (lmt 0 1750 1757 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" ) (lmt #f #f #f "lst" ) (lmt 0 1769 1777 "varlist" (lmtk 1 1 1 "ready"))))
    (cons (lmt #f #f #f "namedanondef-xf" (lmt 0 1515 1522 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 1529 1537 "varlist" (lmtk 1 1 1 "ready"))) (lmt #f #f #f "defcase" (lmt 0 1550 1556 "var" (lmtk 1 1 1 "patt")) (lmt 0 1556 1561 "var" (lmtk 1 1 1 "repl"))) (lmt 0 1563 1574 "varlist" (lmtk 1 1 1 "defcases"))) (lmt #f #f #f "namedanondef-xf" (lmt 0 1596 1603 "var" (lmtk 1 1 1 "fname")) (lmt #f #f #f "lst" (lmt 0 1610 1619 "varlist" (lmtk 1 1 1 "ready")) (lmt #f #f #f "anondefcase-xf" (lmt 0 1637 1643 "var" (lmtk 1 1 1 "patt")) (lmt 0 1643 1648 "var" (lmtk 1 1 1 "repl")))) (lmt 0 1651 1662 "varlist" (lmtk 1 1 1 "defcases")))))
  (list '%*%
    (cons (lmt #f #f #f "%*%" (lmt #f #f #f "var" (lmtk 1 1 1 "n")) (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "rule" (lmt #f #f #f "var" (lmtk 1 1 1 "n")) (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "var" (lmtk 1 1 1 "n"))) (lmt #f #f #f "null" )))))
  (list 'remove-elem
    (cons (lmt #f #f #f "remove-elem" (lmt 0 4179 4185 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4192 4200 "varlist" (lmtk 1 1 1 "elems")))) (lmt #f #f #f "remove-elem-xf" (lmt #f #f #f "lst" ) (lmt 0 4230 4236 "var" (lmtk 1 1 1 "elem")) (lmt #f #f #f "lst" (lmt 0 4243 4251 "varlist" (lmtk 1 1 1 "elems"))))))
  (list 'parens
    (cons (lmt 2 493 505 "parens" (lmt 2 501 503 "var" (lmtk 1 1 1 "c"))) (lmt 2 505 531 "+" (lmt 2 508 518 "tok" (lmt 2 513 516 "string" (lmtk 1 1 1 "("))) (lmt 2 518 521 "var" (lmtk 1 1 1 "c")) (lmt 2 521 530 "tok" (lmt 2 526 529 "string" (lmtk 1 1 1 ")")))))
    (cons (lmt #f #f #f "parens" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "+" (lmt #f #f #f "tok" (lmt #f #f #f "string" (lmtk 1 1 1 "("))) (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "tok" (lmt #f #f #f "string" (lmtk 1 1 1 ")"))))))
  (list 'oper
    (cons (lmt 2 1604 1614 "oper" (lmt 2 1610 1612 "var" (lmtk 1 1 1 "c"))) (lmt 2 1614 1643 "tok" (lmt 2 1619 1642 "+" (lmt 2 1622 1625 "var" (lmtk 1 1 1 "c")) (lmt 2 1625 1641 "!" (lmt 2 1628 1640 "name" (lmtk 1 1 1 "operatorchar")))))))
  (list '@$:
    (cons (lmt 2 1278 1292 "@$:" (lmt 2 1283 1286 "var" (lmtk 1 1 1 "n")) (lmt 2 1286 1290 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1292 1354 "@" (lmt 2 1295 1298 "var" (lmtk 1 1 1 "n")) (lmt 2 1298 1353 "+" (lmt 2 1301 1309 "kw" (lmt 2 1305 1307 "var" (lmtk 1 1 1 "n"))) (lmt 2 1309 1352 "$" (lmt 2 1312 1321 "+" (lmt 2 1315 1319 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1321 1324 "var" (lmtk 1 1 1 "n")) (lmt 2 1324 1351 "string" (lmtk 1 1 1 ": statement not completed")))))))
  (list 'chevrons$
    (cons (lmt 2 999 1014 "chevrons$" (lmt 2 1010 1012 "var" (lmtk 1 1 1 "c"))) (lmt 2 1014 1077 "+" (lmt 2 1017 1027 "tok" (lmt 2 1022 1025 "string" (lmtk 1 1 1 "<"))) (lmt 2 1027 1076 "$" (lmt 2 1030 1047 "+" (lmt 2 1033 1036 "var" (lmtk 1 1 1 "c")) (lmt 2 1036 1045 "tok" (lmt 2 1041 1044 "string" (lmtk 1 1 1 ">")))) (lmt 2 1047 1075 "string" (lmtk 1 1 1 "could not find closing '>'"))))))
  (list 'parens$
    (cons (lmt 2 718 731 "parens$" (lmt 2 727 729 "var" (lmtk 1 1 1 "c"))) (lmt 2 731 794 "+" (lmt 2 734 744 "tok" (lmt 2 739 742 "string" (lmtk 1 1 1 "("))) (lmt 2 744 793 "$" (lmt 2 747 764 "+" (lmt 2 750 753 "var" (lmtk 1 1 1 "c")) (lmt 2 753 762 "tok" (lmt 2 758 761 "string" (lmtk 1 1 1 ")")))) (lmt 2 764 792 "string" (lmtk 1 1 1 "could not find closing ')'"))))))
  (list '*1
    (cons (lmt 2 454 462 "*1" (lmt 2 458 460 "var" (lmtk 1 1 1 "c"))) (lmt 2 462 475 "+" (lmt 2 465 468 "var" (lmtk 1 1 1 "c")) (lmt 2 468 474 "*" (lmt 2 471 473 "var" (lmtk 1 1 1 "c"))))))
  (list '@.$:
    (cons (lmt 2 1431 1449 "@.$:" (lmt 2 1437 1440 "var" (lmtk 1 1 1 "f")) (lmt 2 1440 1443 "var" (lmtk 1 1 1 "n")) (lmt 2 1443 1447 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1449 1514 "@" (lmt 2 1452 1455 "var" (lmtk 1 1 1 "n")) (lmt 2 1455 1513 "+" (lmt 2 1458 1461 "var" (lmtk 1 1 1 "f")) (lmt 2 1461 1469 "kw" (lmt 2 1465 1467 "var" (lmtk 1 1 1 "n"))) (lmt 2 1469 1512 "$" (lmt 2 1472 1481 "+" (lmt 2 1475 1479 "varlist" (lmtk 1 1 1 "r"))) (lmt 2 1481 1484 "var" (lmtk 1 1 1 "n")) (lmt 2 1484 1511 "string" (lmtk 1 1 1 ": statement not completed")))))))
  (list 'brackets$
    (cons (lmt 2 811 826 "brackets$" (lmt 2 822 824 "var" (lmtk 1 1 1 "c"))) (lmt 2 826 889 "+" (lmt 2 829 839 "tok" (lmt 2 834 837 "string" (lmtk 1 1 1 "["))) (lmt 2 839 888 "$" (lmt 2 842 859 "+" (lmt 2 845 848 "var" (lmtk 1 1 1 "c")) (lmt 2 848 857 "tok" (lmt 2 853 856 "string" (lmtk 1 1 1 "]")))) (lmt 2 859 887 "string" (lmtk 1 1 1 "could not find closing ']'"))))))
  (list 'braces
    (cons (lmt 2 605 617 "braces" (lmt 2 613 615 "var" (lmtk 1 1 1 "c"))) (lmt 2 617 643 "+" (lmt 2 620 630 "tok" (lmt 2 625 628 "string" (lmtk 1 1 1 "{"))) (lmt 2 630 633 "var" (lmtk 1 1 1 "c")) (lmt 2 633 642 "tok" (lmt 2 638 641 "string" (lmtk 1 1 1 "}"))))))
  (list 'list
    (cons (lmt 2 287 297 "list" (lmt 2 293 295 "var" (lmtk 1 1 1 "c"))) (lmt 2 297 311 "seq" (lmt 2 302 305 "var" (lmtk 1 1 1 "c")) (lmt 2 305 310 "name" (lmtk 1 1 1 "comma")))))
  (list '?+
    (cons (lmt 2 376 386 "?+" (lmt 2 380 384 "varlist" (lmtk 1 1 1 "c"))) (lmt 2 386 398 "?" (lmt 2 389 397 "+" (lmt 2 392 396 "varlist" (lmtk 1 1 1 "c"))))))
  (list 'tok
    (cons (lmt #f #f #f "tok" (lmt #f #f #f "var" (lmtk 1 1 1 "c"))) (lmt #f #f #f "+" (lmt #f #f #f "var" (lmtk 1 1 1 "c")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))))
(list (cons 'endoffile (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "anychar"))))
  (cons 'null (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'declaration (lmt #f #f #f ">" (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))))
  (cons 'namechars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "namechars"))) (lmt #f #f #f "null" )))
  (cons 'newline (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "returnchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linefeedchar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "returnchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linefeedchar"))))
  (cons 'name (lmt #f #f #f "//" (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "var")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "'")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "varlist")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "'''")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "nameliteral")))))
  (cons 'whitespace (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "/" (lmt #f #f #f "name" (lmtk 1 1 1 "whitespacechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "linecomment"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt #f #f #f "null" )))
  (cons 'nameliteral (lmt #f #f #f "+" (lmt #f #f #f "<" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "namechars")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'start (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "declarations")) (lmt #f #f #f "name" (lmtk 1 1 1 "endoffile"))))
  (cons 'linecomment (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ";")) (lmt #f #f #f "name" (lmtk 1 1 1 "commentchars")) (lmt #f #f #f "name" (lmtk 1 1 1 "newline"))))
  (cons 'namechar (lmt #f #f #f "/" (lmt #f #f #f "name" (lmtk 1 1 1 "letterchar")) (lmt #f #f #f "name" (lmtk 1 1 1 "digitchar")) (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "string" (lmtk 1 1 1 "=")) (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "string" (lmtk 1 1 1 "^")) (lmt #f #f #f "string" (lmtk 1 1 1 "`")) (lmt #f #f #f "string" (lmtk 1 1 1 "|")) (lmt #f #f #f "string" (lmtk 1 1 1 "~")) (lmt #f #f #f "string" (lmtk 1 1 1 "_")) (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "string" (lmtk 1 1 1 "%")) (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "string" (lmtk 1 1 1 "-")) (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "string" (lmtk 1 1 1 ":")) (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "string" (lmtk 1 1 1 "."))))
  (cons 'declarations (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "declaration")) (lmt #f #f #f "name" (lmtk 1 1 1 "declarations"))) (lmt #f #f #f "null" )))
  (cons 'commentchars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "newline"))) (lmt #f #f #f "name" (lmtk 1 1 1 "anychar")) (lmt #f #f #f "name" (lmtk 1 1 1 "commentchars"))) (lmt #f #f #f "null" )))
  (cons 'stringchars (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "anychar")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "null" )))
  (cons 'sexpr (lmt #f #f #f "//" (lmt 1 2888 2926 "@" (lmt 1 2891 2896 "string" (lmtk 1 1 1 "kw")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2904 2924 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2912 2916 "string" (lmtk 1 1 1 "kw")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2918 2923 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2614 2667 "@" (lmt 1 2617 2623 "string" (lmtk 1 1 1 "@.:")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2631 2665 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2639 2644 "string" (lmtk 1 1 1 "@.:")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2646 2652 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2652 2658 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2658 2664 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2390 2435 "@" (lmt 1 2393 2398 "string" (lmtk 1 1 1 "@$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2406 2433 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2414 2418 "string" (lmtk 1 1 1 "@$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2420 2426 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2426 2432 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2181 2225 "@" (lmt 1 2184 2189 "string" (lmtk 1 1 1 "$$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2197 2223 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2205 2209 "string" (lmtk 1 1 1 "$$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2211 2217 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2217 2222 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 1836 1888 "@" (lmt 1 1839 1851 "string" (lmtk 1 1 1 "chevrons$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1859 1886 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1867 1878 "string" (lmtk 1 1 1 "chevrons$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1880 1885 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 1506 1558 "@" (lmt 1 1509 1521 "string" (lmtk 1 1 1 "brackets$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1529 1556 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1537 1548 "string" (lmtk 1 1 1 "brackets$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1550 1555 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 1173 1227 "@" (lmt 1 1176 1187 "string" (lmtk 1 1 1 "chevrons")) (lmt 1 1187 1226 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1198 1224 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1206 1216 "string" (lmtk 1 1 1 "chevrons")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1218 1223 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 939 989 "@" (lmt 1 942 953 "string" (lmtk 1 1 1 "brackets")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 961 987 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 969 979 "string" (lmtk 1 1 1 "brackets")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 981 986 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 728 771 "@" (lmt 1 731 736 "string" (lmtk 1 1 1 "*+")) (lmt 1 736 770 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 747 768 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 755 759 "string" (lmtk 1 1 1 "*+")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 761 767 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 519 571 "@" (lmt 1 522 532 "string" (lmtk 1 1 1 "tr-list")) (lmt 1 532 570 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 543 568 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 551 560 "string" (lmtk 1 1 1 "tr-list")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 562 567 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 305 361 "@" (lmt 1 308 317 "string" (lmtk 1 1 1 "tr-seq")) (lmt 1 317 360 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 328 358 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 336 344 "string" (lmtk 1 1 1 "tr-seq")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 346 352 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 352 357 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "token")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "#")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "<" (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "pattern")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "termpattern")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "&")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "sym")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "sym")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "tok")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "tok")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "%*%")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "%*%")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "string")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringliteral"))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "pattern")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "syntaxpattern")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unexpanded")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "rule")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "rule")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "insert")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "insert")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "newname")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "newname")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "import")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "import")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "stringliteral")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "name")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "+")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "//")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "//")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "/")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "!")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "<")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "@")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ">")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^>")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^>")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^=")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^=")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "^<")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "^<")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "null")) (lmt #f #f #f "name" (lmtk 1 1 1 "null"))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "*")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "parens")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "parens")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "?")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "unreplaced")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "string" (lmtk 1 1 1 "unreplaced")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar"))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt #f #f #f "@" (lmt #f #f #f "string" (lmtk 1 1 1 "term")) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "[")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ":")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "null" )) (lmt #f #f #f "string" (lmtk 1 1 1 "]")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))) (lmt 1 185 235 "@" (lmt 1 188 194 "string" (lmtk 1 1 1 "seq")) (lmt 1 194 234 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 205 232 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 213 218 "string" (lmtk 1 1 1 "seq")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 220 226 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 226 231 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 414 460 "@" (lmt 1 417 424 "string" (lmtk 1 1 1 "list")) (lmt 1 424 459 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 435 457 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 443 449 "string" (lmtk 1 1 1 "list")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 451 456 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 628 671 "@" (lmt 1 631 636 "string" (lmtk 1 1 1 "?+")) (lmt 1 636 670 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 647 668 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 655 659 "string" (lmtk 1 1 1 "?+")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 661 667 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 827 870 "@" (lmt 1 830 835 "string" (lmtk 1 1 1 "*1")) (lmt 1 835 869 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 846 867 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 854 858 "string" (lmtk 1 1 1 "*1")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 860 866 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 1055 1105 "@" (lmt 1 1058 1067 "string" (lmtk 1 1 1 "braces")) (lmt 1 1067 1104 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1078 1102 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1086 1094 "string" (lmtk 1 1 1 "braces")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1096 1101 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))) (lmt 1 1342 1390 "@" (lmt 1 1345 1355 "string" (lmtk 1 1 1 "parens$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1363 1388 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1371 1380 "string" (lmtk 1 1 1 "parens$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1382 1387 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 1672 1720 "@" (lmt 1 1675 1685 "string" (lmtk 1 1 1 "braces$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1693 1718 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 1701 1710 "string" (lmtk 1 1 1 "braces$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 1712 1717 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2015 2073 "@" (lmt 1 2018 2033 "string" (lmtk 1 1 1 "body-braces$")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2041 2071 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2049 2063 "string" (lmtk 1 1 1 "body-braces$")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2065 2070 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2286 2331 "@" (lmt 1 2289 2294 "string" (lmtk 1 1 1 "@:")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2302 2329 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2310 2314 "string" (lmtk 1 1 1 "@:")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2316 2322 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2322 2328 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2500 2547 "@" (lmt 1 2503 2509 "string" (lmtk 1 1 1 "@$:")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2517 2545 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2525 2530 "string" (lmtk 1 1 1 "@$:")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2532 2538 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2538 2544 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 2743 2798 "@" (lmt 1 2746 2753 "string" (lmtk 1 1 1 "@.$:")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2761 2796 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 2769 2775 "string" (lmtk 1 1 1 "@.$:")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 2777 2783 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2783 2789 "name" (lmtk 1 1 1 "sexpr")) (lmt 1 2789 2795 "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))) (lmt 1 3000 3042 "@" (lmt 1 3003 3010 "string" (lmtk 1 1 1 "oper")) (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 "(")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 3018 3040 "+" (lmt #f #f #f "+" (lmt #f #f #f "+" (lmt 1 3026 3032 "string" (lmtk 1 1 1 "oper")) (lmt #f #f #f "!" (lmt #f #f #f "name" (lmtk 1 1 1 "namechar")))) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))) (lmt 1 3034 3039 "name" (lmtk 1 1 1 "sexpr"))) (lmt #f #f #f "+" (lmt #f #f #f "string" (lmtk 1 1 1 ")")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace")))))))
  (cons 'stringliteral (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "<" (lmt #f #f #f "name" (lmtk 1 1 1 "stringchars"))) (lmt #f #f #f "name" (lmtk 1 1 1 "doublequotechar")) (lmt #f #f #f "name" (lmtk 1 1 1 "whitespace"))))
  (cons 'sexprs (lmt #f #f #f "/" (lmt #f #f #f "+" (lmt #f #f #f "name" (lmtk 1 1 1 "sexpr")) (lmt #f #f #f "name" (lmtk 1 1 1 "sexprs"))) (lmt #f #f #f "null" )))))