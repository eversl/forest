; Definitions for syntax extensions needed to read the patterns 
(extend "core.patterns.forest")
(extend "core.rules.forest")

;(pattern (seq 'i 's) (+ 'i (* (+ 's 'i))))
(insert sexpr (@ "seq" (+ (parens (+ (sym "seq") sexpr sexpr)))))

;(pattern (tr-seq 'i 's) (+ (? (seq 'i 's)) (? 's)))
(insert sexpr (@ "tr-seq" (+ (parens (+ (sym "tr-seq") sexpr sexpr)))))

;(pattern (list 'c) (seq 'c comma))
(insert sexpr (@ "list" (+ (parens (+ (sym "list") sexpr)))))

;(pattern (tr-list 'c) (tr-seq 'c comma))
(insert sexpr (@ "tr-list" (+ (parens (+ (sym "tr-list") sexpr)))))

;(syntaxpattern (?+ '''c) (? (+ '''c)))
(insert sexpr (@ "?+" (+ (parens (+ (sym "?+") sexprs)))))

;(syntaxpattern (*+ '''c) (* (+ '''c)))
(insert sexpr (@ "*+" (+ (parens (+ (sym "*+") sexprs)))))

;(syntaxpattern (*1 'c) (+ 'c (* 'c)))
(insert sexpr (@ "*1" (+ (parens (+ (sym "*1") sexprs)))))

;(pattern (brackets 'c) (+ (tok "[") 'c (tok "]")))
(insert sexpr (@ "brackets" (parens (+ (sym "brackets") sexpr))))
;(pattern (braces 'c) (+ (tok "{") 'c (tok "}")))
(insert sexpr (@ "braces" (+ (parens (+ (sym "braces") sexpr)))))
;(pattern (chevrons 'c) (+ (tok "<") 'c (tok ">")))
(insert sexpr (@ "chevrons" (+ (parens (+ (sym "chevrons") sexpr)))))

;(pattern (parens$ 'c) (/ (+ (tok "(") 'c (tok ")")) ($ "could not find closing ')'" (tok "("))))
(insert sexpr (@ "parens$" (parens (+ (sym "parens$") sexpr))))
;(pattern (brackets$ 'c) (/ (+ (tok "[") 'c (tok "]")) ($ "could not find closing ']'" (tok "["))))
(insert sexpr (@ "brackets$" (parens (+ (sym "brackets$") sexpr))))
;(pattern (braces$ 'c) (/ (+ (tok "{") 'c (tok "}")) ($ "could not find closing '}'" (tok "{"))))
(insert sexpr (@ "braces$" (parens (+ (sym "braces$") sexpr))))
;(pattern (chevrons$ 'c) (/ (+ (tok "<") 'c (tok ">")) ($ "could not find closing '>'" (tok "<"))))
(insert sexpr (@ "chevrons$" (parens (+ (sym "chevrons$") sexpr))))

;(syntaxpattern (body-braces$ 'c) (@ "body" (+ (tok "{") ($ (+ 'c (tok "}")) "could not find closing '}'"))))
(insert sexpr (@ "body-braces$" (parens (+ (sym "body-braces$") sexpr))))

;(pattern ($$ 'a1 'a2) (/ (+ 'a1 'a2) (+ (& 'a1) ($ 'a1 'a1 "expression not completed"))))
(insert sexpr (@ "$$" (parens (+ (sym "$$") sexpr sexpr))))

;(pattern (@: 'n ,r) (@ 'n (+ (kw 'n) ,r)))
(insert sexpr (@ "@:" (parens (+ (sym "@:") sexpr sexprs))))
;(pattern (@$ 'n ,r) (@ 'n ($ 'n (+ ,r))))
(insert sexpr (@ "@$" (parens (+ (sym "@$") sexpr sexprs))))
;(pattern (@$: 'n ,r) (@ 'n ($ (kw 'n) (+ ,r))))
(insert sexpr (@ "@$:" (parens (+ (sym "@$:") sexpr sexprs))))
;(pattern (@.: 'f 'n ,r) (@ 'n (+ 'f (kw 'n) ,r)))
(insert sexpr (@ "@.:" (parens (+ (sym "@.:") sexpr sexpr sexprs))))
;(pattern (@.$: 'f 'n ,r) (@ 'n (+ 'f ($ (kw 'n) (+ ,r)))))
(insert sexpr (@ "@.$:" (parens (+ (sym "@.$:") sexpr sexpr sexprs))))

;(syntaxpattern (kw 'c) (tok (insert keyword (+ 'c (! letterordigit)))))
(insert sexpr (@ "kw" (parens (+ (sym "kw") sexpr))))

;(syntaxpattern (oper 'c) (tok (+ 'c (! operatorchar))))
(insert sexpr (@ "oper" (parens (+ (sym "oper") sexpr))))

(insert sexpr (@ "term" (parens (+ (sym "term") sexpr sexprs))))
(insert sexpr (@ "unexpanded" (@ "term" (parens (+ (sym "uterm") sexpr sexprs)))))
