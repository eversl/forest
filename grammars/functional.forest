(import "core.patterns.forest")
(import "core.rules.forest")

(import "functional.patterns.forest")
(import "functional.rules.forest")

;;;;;;;; closure ;;;;;;;;;;;

(termpattern 
  [[closure : [name : 'fn] '''cl-args] :'''args]
  ['fn : '''cl-args '''args])
(termpattern 
  [[closure : 'fn '''cl-args] :'''args]
  ['fn : '''cl-args '''args])

;;;;;;;; cons ;;;;;;;;;;;

(termpattern [cons : 'hd [lst : '''tl]]
             [lst : 'hd '''tl])


{{ functional             

function map (fn, lst(hd, tl...)) = cons( `fn`(hd), map(fn, lst(tl...)))
           | (fn, lst(    tl...)) = lst(tl...)


function filter (pred, lst(hd, tl...)) = if( `pred`(hd), cons(hd, filter(pred, lst(tl...))), filter(pred, lst(tl...)))
              | (pred, lst(    tl...)) = lst(tl...)


function if(boolean(pred), then, else) = `pred`(then, else)


function true() = boolean(function (then, else) = then)

function false() = boolean(function (then, else) = else)

function eq (a, a) = true()            

}}

